# Generated by Django 2.2.7 on 2019-11-05 18:27

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Test',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of test', max_length=80, unique=True)),
                ('description', models.TextField(default='', help_text='Description of the test (shown on listing).')),
                ('problems_url', models.CharField(help_text='The URL to the problems file or page', max_length=150)),
                ('exam_window_start', models.DateTimeField(help_text='Earliest you can start the test')),
                ('exam_window_end', models.DateTimeField(help_text='Latest you can start the test')),
                ('active', models.BooleanField(default=False, help_text='Is the contest currently active?')),
                ('time_limit', models.PositiveIntegerField(default=50, help_text='How long is the contest in minutes?')),
                ('publish_problems', models.BooleanField(default=False, help_text='Show the problems URL to the public at the start of the exam.')),
                ('max_attempts', models.PositiveIntegerField(default=0, help_text="Number of available attempts on each problem on the test for live-grading. Set to zero if you don't want live-grading.")),
            ],
        ),
        migrations.CreateModel(
            name='SubmissionKey',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('display_name', models.CharField(help_text='The displayed name of the student or team taking the contest, e.g. "MIT Beavers", "Yang the Sheep". For individual students this can be the same as the real name.', max_length=80)),
                ('real_name', models.CharField(help_text='Comma separated list of the real name(s) of participants(s) taking the test.', max_length=200)),
                ('email', models.EmailField(help_text='Email used to contact participant(s) if necessary.', max_length=80)),
                ('end_time', models.DateTimeField(help_text='Latest you can submit answers. Set automatically by server.')),
                ('test', models.ForeignKey(help_text='Test that the submission is for.', on_delete=django.db.models.deletion.CASCADE, to='hydrogen.Test')),
            ],
        ),
        migrations.CreateModel(
            name='Problem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.PositiveIntegerField(help_text='The problem number on the test')),
                ('answer', models.IntegerField(help_text='The answer to the problem')),
                ('weight', models.IntegerField(default=1, help_text='The weight of the problem')),
                ('test', models.ForeignKey(help_text='The test that the problem is on', on_delete=django.db.models.deletion.CASCADE, to='hydrogen.Test')),
            ],
            options={
                'ordering': ('test', 'number'),
                'unique_together': {('test', 'number')},
            },
        ),
        migrations.CreateModel(
            name='Attempt',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_answer', models.IntegerField(help_text='The answer the student is inputting')),
                ('time', models.DateTimeField(auto_now_add=True, help_text='The time the attempt was made')),
                ('problem', models.ForeignKey(help_text='The problem the attempt is for', on_delete=django.db.models.deletion.CASCADE, to='hydrogen.Problem')),
                ('submission_key', models.ForeignKey(help_text='Which session is this attempt a part of?', on_delete=django.db.models.deletion.CASCADE, to='hydrogen.SubmissionKey')),
            ],
        ),
    ]
